[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\acer\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\acer\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 18.0.1.1)
[debug]       Load.loadUnit: plugins took 79.5564ms
[debug]       Load.loadUnit: defsScala took 0.260901ms
[debug] [Loading] Scanning directory C:\Users\acer\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\acer\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.7495 ms
[debug]           Load.resolveProject(global-plugins) took 32.208ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\acer\.sbt\1.0\plugins, plugins: List(<none>))) took 58.908899ms
[debug] [Loading] Done in C:\Users\acer\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 76.2146ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.145099ms
[debug]     Load.loadUnit(file:/C:/Users/acer/.sbt/1.0/plugins/, ...) took 165.758699ms
[debug]   Load.apply: load took 291.191499ms
[debug]   Load.apply: resolveProjects took 4.7121ms
[debug]   Load.apply: finalTransforms took 48.7928ms
[debug]   Load.apply: config.delegates took 6.964601ms
[debug]   Load.apply: Def.make(settings)... took 323.5739ms
[debug]   Load.apply: structureIndex took 81.559ms
[debug]   Load.apply: mkStreams took 1.3655ms
[info] loading global plugins from C:\Users\acer\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2012.854ms
[debug]           Load.loadUnit: plugins took 18.3329ms
[debug]           Load.loadUnit: defsScala took 0.0046ms
[debug] [Loading] Scanning directory C:\Users\acer\Desktop\Module_3\xenonstack\project
[debug]             Load.loadUnit: mkEval took 6.490601ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\acer\Desktop\Module_3\xenonstack\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4699 ms
[info] loading settings for project xenonstack-build from idea.sbt ...
[debug]               Load.resolveProject(xenonstack-build) took 2.4787ms
[debug]             Load.loadTransitive: finalizeProject(Project(id xenonstack-build, base: C:\Users\acer\Desktop\Module_3\xenonstack\project, plugins: List(<none>))) took 4.473499ms
[debug] [Loading] Done in C:\Users\acer\Desktop\Module_3\xenonstack\project, returning: (xenonstack-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1851.390999ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.9316ms
[debug]         Load.loadUnit(file:/C:/Users/acer/Desktop/Module_3/xenonstack/project/, ...) took 1876.4873ms
[debug]       Load.apply: load took 1877.703601ms
[debug]       Load.apply: resolveProjects took 0.081ms
[debug]       Load.apply: finalTransforms took 13.321401ms
[debug]       Load.apply: config.delegates took 0.479101ms
[debug]       Load.apply: Def.make(settings)... took 67.2988ms
[debug]       Load.apply: structureIndex took 29.909201ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\acer\Desktop\Module_3\xenonstack\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3220.219401ms
[debug]     Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Users\acer\Desktop\Module_3\xenonstack
[debug]       Load.loadUnit: mkEval took 0.1706ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.594 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 26.736099ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\acer\Desktop\Module_3\xenonstack, plugins: List(<none>))) took 29.526099ms
[debug] [Loading] Done in C:\Users\acer\Desktop\Module_3\xenonstack, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1013.6848ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.6512ms
[debug]   Load.loadUnit(file:/C:/Users/acer/Desktop/Module_3/xenonstack/, ...) took 4244.2227ms
[debug] Load.apply: load took 4245.6674ms
[debug] Load.apply: resolveProjects took 0.1078ms
[debug] Load.apply: finalTransforms took 25.6859ms
[debug] Load.apply: config.delegates took 0.295401ms
[debug] Load.apply: Def.make(settings)... took 69.571ms
[debug] Load.apply: structureIndex took 21.8721ms
[debug] Load.apply: mkStreams took 0.002801ms
[info] set current project to xenonstack (in build file:/C:/Users/acer/Desktop/Module_3/xenonstack/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50516 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50516, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to xenonstack (in build file:/C:/Users/acer/Desktop/Module_3/xenonstack/)
[debug] > Exec(idea-shell, None, None)
